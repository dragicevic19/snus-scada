//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManagerClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDatabaseManagerService")]
    public interface IDatabaseManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RegisterUser", ReplyAction="http://tempuri.org/IDatabaseManagerService/RegisterUserResponse")]
        void RegisterUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RegisterUser", ReplyAction="http://tempuri.org/IDatabaseManagerService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Login", ReplyAction="http://tempuri.org/IDatabaseManagerService/LoginResponse")]
        void Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Login", ReplyAction="http://tempuri.org/IDatabaseManagerService/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Logout", ReplyAction="http://tempuri.org/IDatabaseManagerService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Logout", ReplyAction="http://tempuri.org/IDatabaseManagerService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddTagResponse")]
        void AddTag();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddTagResponse")]
        System.Threading.Tasks.Task AddTagAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveTagResponse")]
        void RemoveTag();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveTagResponse")]
        System.Threading.Tasks.Task RemoveTagAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/ChangeOutputValueResponse")]
        void ChangeOutputValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/ChangeOutputValueResponse")]
        System.Threading.Tasks.Task ChangeOutputValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetOutputValueResponse")]
        double GetOutputValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetOutputValueResponse")]
        System.Threading.Tasks.Task<double> GetOutputValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOn", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOnResponse")]
        bool TurnScanOn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOn", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOnResponse")]
        System.Threading.Tasks.Task<bool> TurnScanOnAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOff", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOffResponse")]
        bool TurnScanOff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOff", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOffResponse")]
        System.Threading.Tasks.Task<bool> TurnScanOffAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseManagerServiceChannel : DatabaseManagerClient.ServiceReference.IDatabaseManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseManagerServiceClient : System.ServiceModel.ClientBase<DatabaseManagerClient.ServiceReference.IDatabaseManagerService>, DatabaseManagerClient.ServiceReference.IDatabaseManagerService {
        
        public DatabaseManagerServiceClient() {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterUser() {
            base.Channel.RegisterUser();
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync() {
            return base.Channel.RegisterUserAsync();
        }
        
        public void Login() {
            base.Channel.Login();
        }
        
        public System.Threading.Tasks.Task LoginAsync() {
            return base.Channel.LoginAsync();
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public void AddTag() {
            base.Channel.AddTag();
        }
        
        public System.Threading.Tasks.Task AddTagAsync() {
            return base.Channel.AddTagAsync();
        }
        
        public void RemoveTag() {
            base.Channel.RemoveTag();
        }
        
        public System.Threading.Tasks.Task RemoveTagAsync() {
            return base.Channel.RemoveTagAsync();
        }
        
        public void ChangeOutputValue() {
            base.Channel.ChangeOutputValue();
        }
        
        public System.Threading.Tasks.Task ChangeOutputValueAsync() {
            return base.Channel.ChangeOutputValueAsync();
        }
        
        public double GetOutputValue() {
            return base.Channel.GetOutputValue();
        }
        
        public System.Threading.Tasks.Task<double> GetOutputValueAsync() {
            return base.Channel.GetOutputValueAsync();
        }
        
        public bool TurnScanOn() {
            return base.Channel.TurnScanOn();
        }
        
        public System.Threading.Tasks.Task<bool> TurnScanOnAsync() {
            return base.Channel.TurnScanOnAsync();
        }
        
        public bool TurnScanOff() {
            return base.Channel.TurnScanOff();
        }
        
        public System.Threading.Tasks.Task<bool> TurnScanOffAsync() {
            return base.Channel.TurnScanOffAsync();
        }
    }
}
